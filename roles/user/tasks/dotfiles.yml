---
# Needed vars:
# dotfiles_repo
# dotfiles_user
# dotfiles_user_home

- set_fact:
    dotfiles_location: "{{ dotfiles_user_home }}/{{ dotfiles_repo | regex_replace('^.*/([^/]+)\\.git', '\\1') }}"

- name: Clone dotfiles repo
  git:
    accept_hostkey: yes
    repo: '{{ dotfiles_repo }}'
    dest: '{{ dotfiles_location }}'

- name: User owns his dotfiles repo
  file:
    path: '{{ dotfiles_location }}'
    owner: '{{ dotfiles_user }}'
    group: '{{ dotfiles_user }}'
    recurse: yes

- name: Find top-level files
  find:
    file_type: file
    paths: '{{ dotfiles_location }}/dotfiles'
  register: dotfiles_top_files

- name: Find top-level directories
  find:
    file_type: directory
    paths: '{{ dotfiles_location }}/dotfiles'
  register: dotfiles_top_dirs

- name: Find files below that
  find:
    file_type: file
    paths: '{{ item.path }}'
  register: dotfiles_sub_files
  with_items: '{{ dotfiles_top_dirs.files }}'

- name: Find directories below that
  find:
    file_type: directory
    paths: '{{ item.path }}'
  register: dotfiles_sub_dirs
  with_items: '{{ dotfiles_top_dirs.files }}'

- name: Make sure the top level directories exist in user home
  file:
    path: '{{ dotfiles_user_home }}/.{{ item.path | basename }}'
    owner: '{{ dotfiles_user }}'
    group: '{{ dotfiles_user }}'
    mode: '{{ item.mode }}'
    state: directory
  with_items: '{{ dotfiles_top_dirs.files }}'

- name: Symlink top level dotfiles
  file:
    src: '{{ dotfiles_location}}/dotfiles/{{ item.path | basename }}'
    dest: '{{ dotfiles_user_home }}/.{{ item.path | basename }}'
    owner: '{{ dotfiles_user }}'
    group: '{{ dotfiles_user }}'
    state:  link
  with_items: '{{ dotfiles_top_files.files }}'

- name: Flatten subfiles and subdirs
  shell: python2 -c "print [file['path'] for result in {{ dotfiles_sub_files.results + dotfiles_sub_dirs.results }} for file in result['files']]"
  register: dotfiles_flattened

- debug:
    var: dotfiles_flattened

- name: Symlink subfiles and subdirs
  file:
    src: "{{ item }}"
    dest: "{{ dotfiles_user_home }}/.{{ item | regex_replace('^.*/([^/]+/[^/]+)$', '\\1') }}"
    owner: '{{ dotfiles_user }}'
    group: '{{ dotfiles_user }}'
    state: link
  with_items: '{{ dotfiles_flattened.stdout }}'

